{"version":3,"sources":["logo.svg","StockInfo.js","StockChart.js","SearchBarAuto.js","Article.js","NewsFeed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StockInfo","props","react_default","a","createElement","className","src","concat","profile","website","onError","e","target","onerror","alt","companyName","ticker","price","change","index_es","icon","faChevronDown","faChevronUp","company_description","length","slice","href","rel","financialDetails","week_52_range","beta","market_cap","pe_ratio","eps","sector","industry","StockChart","_this","this","data","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderWidth","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","scales","xAxes","type","time","unit","gridLines","color","zeroLineColor","ticks","fontColor","yAxes","legend","display","onClick","handlerFromParent","max","es","Component","SearchBarAuto","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTickers","url","nyseCall","axios","get","dataResponse","params","AccessKey","exchange","nasCall","tsxCall","Promise","all","then","response","tickers","toConsumableArray","validTickers","map","setState","catch","error","console","log","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","state","filter","stock","test","getSuggestionValue","suggestion","renderSuggestion","_ref","query","suggestionText","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","part","index","highlight","key","text","onChange","event","_ref2","newValue","method","toUpperCase","onSuggestionsFetchRequested","_ref3","suggestions","onSuggestionsClearRequested","onSuggestionSelected","_ref4","suggestionValue","suggestionIndex","sectionIndex","preventDefault","substr","indexOf","onSubmit","includes","_this2","_this$state","inputProps","placeholder","id","htmlFor","dist_default","focusInputOnSuggestionClick","Article","loadImages","urlToImage","newUrlToImage","title","source","date","description","NewsFeed","newsFeed","article","Article_Article","moment","publishedAt","format","name","App","handleData","search","getProfile","getPriceAndSeries","getFinancialDetails","ReactGA","category","action","process","company_name","getNews","apiError","subtract","promise1","size","promise2","symbol","api_token","date_from","priceDetails","timeseries","entries","history","toFixed","timeData","timeLabel","forEach","item","push","close","priceDate","setChartLength","apiKey","sources","language","pageSize","sortBy","q","articles","news","label","newLabel","newData","chartUnit","selectedTimeData","selectedTimeLabel","selectedTimeUnit","maxTimeLength","handleTimeSelection","timeSelection","closeError","initializeReactGA","initialize","pageview","timeSeries","particles_default","particles","number","density","enable","value_area","shape","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","require","SearchBarAuto_SearchBarAuto","StockChart_StockChart","NewsFeed_NewsFeed","faHeart","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb8083b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.78679e07.svg\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\n\nexport default function StockInfo(props) {\n\n  // change the class of the 'Change' dispay if it's positive or negatice\n  const change = () => {\n    if (props.change < 0) {\n      return <span className=\"change negative\">{props.change} <FontAwesomeIcon icon={ faChevronDown }/></span>;\n    } else if (props.change >= 0) {\n      return <span className=\"change positive\">{props.change} <FontAwesomeIcon icon={ faChevronUp }/></span>;\n    } else {\n      return <span className=\"change\">{props.change}</span>;\n    }\n  }\n\n  // render the stock info\n  return (\n    <div className=\"stockInfo\">\n      <div className=\"mainInfo\">\n        <div className=\"imageBox\">\n          <img src={`//logo.clearbit.com/${props.profile.website}`} onError={(e)=>{e.target.onerror = null; e.target.src=\"./logoFallback.png\"}} alt={props.companyName} />  \n        </div>\n        <div>\n          <h2>{props.companyName} <span>({props.ticker})</span></h2>\n          <p><span className=\"price\"><span className=\"current\">{props.price}</span>{change()}</span></p>\n        </div>\n      </div>\n      <div className=\"descriptionAndList\">\n        <p className=\"stockDescription\">{props.profile.company_description && props.profile.company_description.length > 300 ? props.profile.company_description.slice(0, 300) + '...' : props.profile.company_description} <a href={props.profile.website} target=\"_blank\" rel=\"noopener noreferrer\">Learn&nbsp;More</a></p>\n        <ul className=\"infoList\">\n          <li>\n            <span>52 Week Range</span>\n            <span>{props.financialDetails.week_52_range}</span>\n          </li>\n          <li>\n            <span>Beta</span>\n            <span>{props.financialDetails.beta}</span>\n          </li>\n          <li>\n            <span>Market Cap</span>\n            <span>{props.financialDetails.market_cap}</span>\n          </li>\n          <li>\n            <span>PE</span>\n            <span>{props.financialDetails.pe_ratio}</span>\n          </li>\n          <li>\n            <span>EPS</span>\n            <span>{props.financialDetails.eps}</span>\n          </li>\n          <li>\n            <span>Sector</span>\n            <span>{props.profile.sector}</span>\n          </li>\n          <li>\n            <span>Industry</span>\n            <span>{props.profile.industry}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport {Line} from 'react-chartjs-2';\n\nexport default class StockChart extends Component {\n  \n  render() {\n    // chart.js data options\n    const data = {\n      labels: this.props.labels,\n      datasets: [\n        {\n          labels: 'My First dataset',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#fff',\n          borderColor: '#fff',\n          borderCapStyle: 'butt',\n          borderWidth: 1,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: '#fff',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 0,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: '#fff',\n          pointHoverBorderWidth: 2,\n          pointRadius: 0,\n          pointHitRadius: 10,\n          data: this.props.data\n          \n        }\n      ]\n    };\n    // chart.js canvas options\n    const options = {\n      scales: {\n          xAxes: [{\n              type: 'time',\n              time: {\n                  unit: this.props.unit\n              },\n              gridLines: {\n                color: \"rgba(255, 255, 255, 0.2)\",\n                zeroLineColor:\"rgba(255, 255, 255, 0.2)\"\n              },\n              ticks: {\n                fontColor: \"rgba(255, 255, 255, 0.8)\",\n              }\n          }],\n          yAxes: [{\n            gridLines: {\n              color: \"rgba(255, 255, 255, 0.2)\",\n              zeroLineColor:\"rgba(255, 255, 255, 0.2)\"\n            },\n            ticks: {\n              fontColor: \"rgba(255, 255, 255, 0.8)\",\n            }\n          }]\n      },\n      legend: {\n        display: false\n      }\n      // responsive: true\n    }\n    \n    return (\n      <div className=\"stockChart\">\n        <h3>Historical Performance</h3>\n        <p>Scale: <button onClick={() => {this.props.handlerFromParent(22)}} className={this.props.unit === 'day' ? 'active' : null}>Month</button>\n        <button onClick={() => {this.props.handlerFromParent(253)}} className={this.props.unit === 'month' ? 'active' : null}>Year</button>\n        <button onClick={() => {this.props.handlerFromParent(this.props.max)}} className={this.props.unit === 'year' ? 'active' : null}>Five Year</button></p>\n        <Line data={data} options={options} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport axios from 'axios';\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\n\nexport default class SearchBarAuto extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      tickers: [],\n      validTickers: []\n    };    \n  }\n\n  // getTickers = () => {\n  //   const url = 'https://financialmodelingprep.com/api/stock/list/all?datatype=json';\n  //   //make the api call to get every available ticker sumbol\n  //   axios.get( url, {\n  //     dataResponse: 'json'\n  //   }).then(response =>{\n  //     response = response.data\n  //     let validTickers = response.map((ticker) => {\n  //       return ticker.Ticker;\n  //     });\n  //     // save full response and array of valid tickers to the component's state\n  //     this.setState({\n  //       tickers: response,\n  //       validTickers: validTickers\n  //     })\n  //   })\n  // }\n\n  getTickers = () => {\n    const url = 'https://api.unibit.ai/api/companylist';\n\n    // make the api call to get the price\n    const nyseCall = axios.get(url, {\n      dataResponse: 'json',\n      params: {\n        AccessKey: 'demo',\n        exchange: 'NYSE',\n      }\n    })\n\n    const nasCall = axios.get(url, {\n      dataResponse: 'json',\n      params: {\n        AccessKey: 'demo',\n        exchange: 'NASDAQ',\n      }\n    })\n\n    const tsxCall = axios.get(url, {\n      dataResponse: 'json',\n      params: {\n        AccessKey: 'demo',\n        exchange: 'TSX',\n      }\n    })\n\n\n    Promise.all([nyseCall, nasCall, tsxCall]).then(response =>{\n\n      let tickers = [...response[0].data, ...response[1].data, ...response[2].data]\n      let validTickers = tickers.map((ticker) => {\n        return ticker.ticker;\n      });\n      this.setState({\n        tickers,\n        validTickers\n      })\n\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n  \n\n  componentDidMount(){\n    // make api call on load\n    this.getTickers();\n  }\n\n  // react autosuggest code begins, code adapted from their custom render demo: https://codepen.io/moroshko/pen/PZWbzK\n\n  // escape special characters \n  escapeRegexCharacters = (str) => {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n  \n  // get suggestions\n  getSuggestions = (value) => {\n    const escapedValue = this.escapeRegexCharacters(value.trim());\n    \n    if (escapedValue === '') {\n      return [];\n    }\n  \n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\n    \n    return this.state.tickers.filter(stock => regex.test(this.getSuggestionValue(stock)));\n  }\n  \n  // get suggestion value\n  getSuggestionValue = (suggestion) => {\n    return `${suggestion.ticker} ${suggestion.companyName}`;\n  }\n  \n  // render the list of of suggestions\n  renderSuggestion = (suggestion, { query }) => {\n    const suggestionText = `${suggestion.ticker} | ${suggestion.companyName}`;\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\n  \n    // render the list and apply the class of highlight to the parts that match the input\n    return (\n      <span className={'suggestion-content '}>\n        <span className=\"suggestion\">\n          {\n            parts.map((part, index) => {\n              const className = part.highlight ? 'highlight' : null;\n  \n              return (\n                <span className={className} key={index}>{part.text}</span>\n              );\n            })\n          }\n        </span>\n      </span>\n    );\n  }\n\n  // have react handle the inout change\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue.toUpperCase()\n    });\n  };\n  \n  // store the suggestions to state\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  // clear the state\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  // when a suggestion is slected pass the ticker to an event handler from the parent\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) =>{\n    event.preventDefault();\n    const ticker = suggestionValue.substr(0,suggestionValue.indexOf(' '));\n    this.setState({\n      value: ticker,\n    })\n    this.props.handlerFromParent(ticker);\n  };\n\n  // if the user submits a valid input instead of picking a suggestion from the list, pass the ticker to an event handler from the parent\n  onSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.validTickers.includes(this.state.value)) {\n      this.props.handlerFromParent(this.state.value);\n    }\n    \n  }\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // input props set the parameters on the input\n    const inputProps = {\n      placeholder: \"Ticker or Company Name\",\n      value,\n      onChange: this.onChange,\n      id: \"stockSearch\"\n    };\n\n    return (\n      <form onSubmit={(e) => this.onSubmit(e)}>\n        <label htmlFor='stockSearch' className=\"visuallyHidden\">Input stock sticker.</label>\n        <Autosuggest \n          suggestions={suggestions.slice(0, 5)}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={this.getSuggestionValue}\n          renderSuggestion={this.renderSuggestion}\n          onSuggestionSelected={this.onSuggestionSelected}\n          inputProps={inputProps}\n          focusInputOnSuggestionClick={false} />\n      </form>\n    );\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Article extends Component {\n  // loads an image if its available\n  loadImages = () => {\n    if (this.props.urlToImage) {\n\n      // if the image is an http, rewrite the url as https to prevent mixed content errors.\n      let urlToImage = this.props.urlToImage;\n      let newUrlToImage = urlToImage;\n      if (urlToImage.includes('http:')) {\n      newUrlToImage = newUrlToImage.slice(0, 4) + \"s\" + newUrlToImage.slice(4);\n      }\n      return (\n        <div className=\"previewImage\">\n          <img src={newUrlToImage} alt={this.props.title} />\n        </div>\n      );\n    }}\n  render() {\n    return (\n      <div className=\"article\">\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {this.loadImages()}\n        </a>\n        <p className=\"articleSource\">{this.props.source} <span className=\"articleDate\">{this.props.date}</span> </p>\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <h3>{this.props.title}</h3>\n        </a> \n        <p>{this.props.description}</p>\n        <a className=\"readMore\" href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">Read More</a> \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Article from './Article'\nimport moment from 'moment'\n\nexport default class NewsFeed extends Component {\n  render() {\n    // show a message if no articles are available\n    let error = '';\n    if (!this.props.newsFeed.length) {\n      error = <p>No articles available at this time.</p>\n    }\n    return (\n      <div className=\"newsFeed\">\n        <h2>Relevant News</h2>\n        {/* map through an array of articles to display them on the newsfeed */}\n        {this.props.newsFeed.map((article, index) =>{\n          return (\n            <Article \n              key={index}\n              title={article.title}\n              url={article.url}\n              urlToImage={article.urlToImage}\n              date={moment(article.publishedAt).format(\"| MMM D, YYYY\")}\n              source={article.source.name}\n              description={article.description} />\n              \n        )})}\n        {error}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.scss';\nimport axios from 'axios';\nimport StockInfo from './StockInfo';\nimport StockChart from './StockChart';\nimport SearchBarAuto from './SearchBarAuto';\nimport NewsFeed from './NewsFeed';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport ReactGA from 'react-ga';\nimport Particles from 'react-particles-js';\n\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state={\n      ticker: 'AAPL',\n      profile: [],\n      price: 0,\n      change: 0,\n      priceDetails: {},\n      financialDetails: {},\n      timeSeries: [],\n      timeData: [],\n      timeLabel: [],\n      selectedTimeData: [],\n      selectedTimeLabel: [],\n      selectedTimeUnit: '',\n      maxTimeLength: 0,\n      companyName: '',\n      news: [],\n      apiError: false,\n      search: false\n    }\n  }\n  handleData = (data) => {\n    // handle data from the search bar, save the ticker to state and call the apis\n    this.setState({\n    ticker: data,\n    search: true\n    })\n    this.getProfile(data);\n    this.getPriceAndSeries(data);\n    this.getFinancialDetails(data);\n    ReactGA.event({\n      category: 'User',\n      action: 'API Query'\n    });\n  }\n  getProfile = (ticker) => {\n    const url = 'https://api.unibit.ai/api/companyprofile/';\n\n    const key = process.env.REACT_APP_UNIBIT_KEY\n    //make the api call\n    axios({\n      method: 'GET',\n      url: url + ticker,\n      dataResponse: 'json',\n      params: {\n        AccessKey: key\n      }\n    }).then(response =>{\n      response = response.data['company profile']\n\n      // clean up company names \n      let companyName = response.company_name\n      if(companyName.includes(' Inc')){\n        companyName = companyName.substr(0,companyName.indexOf(' Inc'));\n      } else if(companyName.includes(' Ltd')){\n        companyName = companyName.substr(0,companyName.indexOf(' Ltd'));\n      } else if(companyName.includes(' (The)')){\n        companyName = companyName.substr(0,companyName.indexOf(' (The)'));\n      }\n\n      // // remove zeros from billion dollar market caps and append a B\n      // let mktCap = response.mktCap \n      // if (mktCap >= 1000000000) {\n      //   mktCap = (Math.round((mktCap / 1000000000) * 100) / 100) + ' B'\n      // }\n      \n      this.getNews(companyName);\n      // save profile to state\n      this.setState({\n        profile: response,\n        companyName: companyName\n      })\n    }).catch(error => {\n      console.log(error)\n      this.setState({\n        apiError: true\n      })\n    })\n  }\n  getFinancialDetails = (ticker) => {\n    const url = 'https://api.unibit.ai/api/financials/summary/';\n\n    const key = process.env.REACT_APP_UNIBIT_KEY\n    //make the api call\n    axios({\n      method: 'GET',\n      url: url + ticker,\n      dataResponse: 'json',\n      params: {\n        AccessKey: key\n      }\n    }).then(response =>{\n      let financialDetails = response.data['Company financials summary']\n      this.setState({\n        financialDetails\n      })\n    })\n    \n  }\n\n  getPriceAndSeries = (ticker) => {\n    const url = 'https://api.unibit.ai/api/realtimestock/';\n    const url2 = 'https://api.worldtradingdata.com/api/v1/history';\n    const uniKey = process.env.REACT_APP_UNIBIT_KEY\n    const worldKey = process.env.REACT_APP_WORLD_KEY\n    const date = moment().subtract(5, 'years').format(\"YYYY-MM-DD\")\n    // make the api call to get the price\n    const promise1 = axios.get(url + ticker, {\n      dataResponse: 'json',\n      params: {\n        AccessKey: uniKey,\n        size: 1\n      }\n    })\n\n    // make the api call to get the series\n    const promise2 = axios.get(url2, {\n      dataResponse: 'json',\n      params: {\n        symbol: ticker,\n        api_token: worldKey,\n        date_from: date\n      }\n    })\n\n    Promise.all([promise1, promise2]).then(response =>{\n      // make the api call to get the timeseries\n      let priceDetails = response[0].data['Realtime Stock price'][0]\n      let timeseries = Object.entries(response[1].data.history)\n      let price = priceDetails.price.toFixed(2)\n\n      let timeData = [];\n      let timeLabel = [];\n      timeseries.forEach((item) => {\n        timeData.push(item[1].close)\n        timeLabel.push(item[0])\n      })\n      \n      let change = price - timeData[0]\n      let priceDate = priceDetails.date.slice(0, 4) + '-' + priceDetails.date.slice(4, 6) + '-' + priceDetails.date.slice(6)\n      if (timeLabel[0] === priceDate) {\n        change = price - timeData[1]\n      }\n      change = change.toFixed(2)\n\n\n      // profile data is inacurate so calculate additional data with the time series and price\n      // this.calculateData(timeData, response2, response1)\n\n      // set default chart length to the length of the series\n      this.setChartLength(timeLabel, timeData, timeLabel.length)\n\n      \n      // save the price and series to state\n      this.setState({\n        priceDetails,\n        timeseries,\n        timeLabel,\n        timeData,\n        change,\n        price\n      })\n    })\n  }\n  getNews = (name) => {\n    const url = 'https://newsapi.org/v2/everything';\n    const key = process.env.REACT_APP_NEWS_KEY\n    // get business news from the api \n    axios.get(url, {\n      dataResponse: 'json',\n      params: {\n        apiKey: key,\n        sources: '\"financial-post,cnbc,the-wall-street-journal,fortune,business-insider\"',\n        language: 'en',\n        pageSize: 12,\n        sortBy: 'publishedAt',\n        q: name\n      }\n    }).then(response =>{\n      response = response.data.articles\n      // save the news articles in an array to state\n      this.setState({\n        news: response\n      })\n    }).catch(error => {\n      console.log(error)\n      this.setState({\n        apiError: true\n      })\n    })\n  }\n\n  setChartLength = (label, data, time) => {\n    const newLabel = label.slice(0,  time);\n    const newData = data.slice(0, time);\n    let chartUnit = 'year';\n    if (time === 22) {\n      chartUnit = 'day'\n    } else if (time === 253) {\n      chartUnit = 'month'\n    }\n    // save the selected chart length to state\n    this.setState({\n      selectedTimeData: newData,\n      selectedTimeLabel: newLabel,\n      selectedTimeUnit: chartUnit,\n      maxTimeLength: label.length\n    })\n  }\n  handleTimeSelection = (timeSelection) => {\n    // set chart length from the time slection buttons\n    this.setChartLength(this.state.timeLabel, this.state.timeData, timeSelection)\n  }\n\n  closeError = () => {\n    this.setState ({\n      apiError: false\n    })\n  }\n\n  initializeReactGA = () => {\n    ReactGA.initialize('UA-142603434-1');\n    ReactGA.pageview('/');\n  }\n\n  componentDidMount(){\n    this.initializeReactGA();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          {!this.state.search && (\n            <Particles\n              className=\"particles\" \n              params={{\n                \"particles\": {\n                  \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                      \"enable\": true,\n                      \"value_area\": 800\n                    }\n                  },\n                  \"color\": {\n                    \"value\": \"#ffffff\"\n                  },\n                  \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                      \"width\": 0,\n                      \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                      \"nb_sides\": 5\n                    },\n                  },\n                  \"opacity\": {\n                    \"value\": 0.2,\n                    \"random\": false,\n                    \"anim\": {\n                      \"enable\": false,\n                      \"speed\": 1,\n                      \"opacity_min\": 0.05,\n                      \"sync\": false\n                    }\n                  },\n                  \"size\": {\n                    \"value\": 3,\n                    \"random\": true,\n                    \"anim\": {\n                      \"enable\": false,\n                      \"speed\": 40,\n                      \"size_min\": 0.1,\n                      \"sync\": false\n                    }\n                  },\n                  \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                  },\n                  \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"bounce\",\n                    \"bounce\": false,\n                    \"attract\": {\n                      \"enable\": false,\n                      \"rotateX\": 600,\n                      \"rotateY\": 1200\n                    }\n                  }\n                },\n                \"interactivity\": {\n                  \"detect_on\": \"canvas\",\n                  \"events\": {\n                    \"resize\": true\n                  },\n                  \"modes\": {\n                    \"grab\": {\n                      \"distance\": 400,\n                      \"line_linked\": {\n                        \"opacity\": 1\n                      }\n                    },\n                    \"bubble\": {\n                      \"distance\": 400,\n                      \"size\": 40,\n                      \"duration\": 2,\n                      \"opacity\": 8,\n                      \"speed\": 3\n                    },\n                    \"repulse\": {\n                      \"distance\": 200,\n                      \"duration\": 0.4\n                    },\n                    \"push\": {\n                      \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                      \"particles_nb\": 2\n                    }\n                  }\n                },\n                \"retina_detect\": true\n              }} />\n            )}\n          <div className={'topBar wrapper'}>\n            <h1><img src={require('./logo.svg')} alt=\"Stockup.ninja\" /></h1>\n            {this.state.search && <SearchBarAuto handlerFromParent={this.handleData} />}\n          </div>\n          {!this.state.search && (\n          <div className=\"homeSearch\">\n            <h2>Search for a company by name or ticker.</h2>\n            <SearchBarAuto handlerFromParent={this.handleData} />\n          </div>\n          )}\n        {this.state.search && (\n          <div className={'twoColumn wrapper'}>\n            <StockInfo \n              ticker={this.state.ticker}\n              change={this.state.change}\n              price={this.state.price}\n              profile={this.state.profile}\n              financialDetails={this.state.financialDetails}\n              companyName={this.state.companyName}\n              />\n            <StockChart labels={this.state.selectedTimeLabel} data={this.state.selectedTimeData} handlerFromParent={this.handleTimeSelection} unit={this.state.selectedTimeUnit} max={this.state.maxTimeLength}/>\n          </div>\n        )}  \n          \n        </header>\n        {this.state.search && (\n          <main className='wrapper'>\n            <NewsFeed newsFeed={this.state.news} />\n            {this.state.apiError && (<div className='error'>\n              <p>An error occured getting the appropriate data for this company.</p>\n              <button onClick={this.closeError}>X</button>\n            </div>)}\n          </main>\n        )}\n        {this.state.search && (\n          <footer>\n            <div className='wrapper footerContent'>\n              <p>Built with <FontAwesomeIcon icon={ faHeart }/> by <a href=\"https://michasiw.com\" target=\"_blank\" rel=\"noopener noreferrer\">Eugene Michasiw</a>.</p>\n              <p>Financial data provided by <a href=\"https://worldtradingdata.com/\" target=\"_blank\" rel=\"noopener noreferrer\">World Trading Data</a> and <a href=\"https://unibit.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">UniBit</a>. News provided by <a href=\"https://newsapi.org/\" target=\"_blank\" rel=\"noopener noreferrer\">NewsAPI.org</a>. Logos provided by <a href=\"https://clearbit.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Clearbit</a>.</p>\n            </div>\n          </footer>\n        )}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}